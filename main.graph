Vector2 :: struct {
    x: float;
    y: float;
}

length :: (x: float, y: float) -> float {
    <- sqrt(x * x + y * y);
}

get_move_y :: () -> float {
    W := 87;
    S := 83;

    move_y := 0.;
    if key_pressed(W) {
        move_y = - 1.;
    }
    if key_pressed(S) {
        move_y = 1.;
    }
    <- move_y;
}

get_move_x :: () -> float {
    A := 65;
    D := 68;

    move_x := 0.;
    if key_pressed(A) {
        move_x = -1.;
    }
    if key_pressed(D) {
        move_x = 1.;
    }
    <- move_x;
}

main :: (){

    window_width := 1000.;
    window_height := 1000.;

    open_window(int(window_width), int(window_height));

    previous_time : float = time_seconds();
    delta := 0.;

    box_size := 20;

    position: Vector2;
    position.x = 0.;
    position.y = 0.;

    velocity: Vector2;
    velocity.x = 1000.;
    velocity.y = 1000.;

    move: Vector2;
    move.x = 0.;
    move.y = 0.;

    while true {
        frame_begin();
        clear_screen();

        move.x = get_move_x();
        move.y = get_move_y();

        len : float = length(move.x, move.y);

        if move.x > 0. {
            move.x = move.x / len;
        }
        if move.y > 0. {
            move.y = move.y / len;
        }

        position.x = position.x + velocity.x * move.x * delta;
        position.y = position.y + velocity.y * move.y * delta;

        if position.x > window_width - 100. {
            position.x = window_width - 100.;
        }
        if position.y > window_height - 100. {
            position.y = window_height - 100.;
        }

        fill_rect(int(position.x), int(position.y), box_size, box_size);

        current_time : float = time_seconds();
        delta = current_time - previous_time;
        previous_time = current_time;

        draw();
    }
}