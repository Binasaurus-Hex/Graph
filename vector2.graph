// basic structs
Vector2 :: struct {
    x: float;
    y: float;
}

Vector2i :: struct {
    x: int;
    y: int;
}

operator+ :: (a: *Vector2, b: *Vector2) -> Vector2 <-{ a.x + b.x, a.y + b.y };
operator- :: (a: *Vector2, b: *Vector2) -> Vector2 <-{ a.x - b.x, a.y - b.y };
operator* :: (a: *Vector2, b: *Vector2) -> Vector2 <-{ a.x * b.x, a.y * b.y };
operator/ :: (a: *Vector2, b: *Vector2) -> Vector2 <-{ a.x / b.x, a.y / b.y };

operator* :: (a: *Vector2, s: float) -> Vector2 <-{ a.x * s, a.y * s };
operator/ :: (a: *Vector2, s: float) -> Vector2 <-{ a.x / s, a.y / s };

length :: (v: *Vector2) -> float <- sqrt(v.x * v.x + v.y * v.y);

normalized :: (v: *Vector2) -> Vector2 {
    size := length(v);
    <- { v.x / size, v.y / size };
}

print :: (v: *Vector2){
    print("{ "); print_float(v.x); print(" , "); print_float(v.y); print(" }");
}

println :: (v: *Vector2){
    print(v); print("\n");
}

operator* :: (a: string, b: int) -> string {
    i := 0;
    while i < b {
        print(a);
        i = i + 1;
    }
    <- "";
}

main :: (){
    "hello" * 10 * 10;
}